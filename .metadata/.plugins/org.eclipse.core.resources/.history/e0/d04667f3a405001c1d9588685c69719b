package IntroToSorting;

import java.util.*;

/**
 * Problem Description:
 * You are given an array A of N elements. You have to make all elements unique, to do so in one step you can increase any number by one.
 * Find the minimum number of steps.
 * 
 * Problem Constraints: 1 <= N <= 105  ;  1 <= A[i] <= 109
 * 
 * Input Format: The only argument given is an Array A, having N integers.
 * Output Format: Return the Minimum number of steps required to make all elements unique.
 * 
 * Example Input: 
 * Input 1: A = [1, 1, 3]  ||  Input 2: A = [2, 4, 5]
 * Example Output:
 * Output 1: 1   ||   Output 2: 0
 * 
 * Explanation 1: We can increase the value of 1st element by 1 in 1 step and will get all unique elements. i.e [2, 1, 3].
 * Explanation 2: All elements are distinct.
 * 
 * @author Administrator
 *
 */
public class UniqueElements {
	
	public static int solve(List<Integer> A) {
        HashSet<Integer> hs = new HashSet<>(A);
        System.out.println(hs);
        int cnt=0;
        if(hs.size() == A.size())
            return cnt;
        
        Collections.sort(A);
        for(int i=0; i<A.size()-1; i++){
            if(A.get(i) == A.get(i+1)){
                int k = 1;
                while(hs.contains(A.get(i)+k)){
                    k++;
                    cnt++;
                }
                hs.add(A.get(i)+k);
                
                if(hs.size()==A.size())
                    return cnt;
            }
        }
        
        return cnt;
	}

	public static void main(String[] args) {
		List<Integer> A = Arrays.asList(1, 1, 3);
		System.out.println(solve(A));

	}

}
